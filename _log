### Starting build.
# Target: main.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules main.ml > main.ml.depends # cached
# Target: ai.mli.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules ai.mli > ai.mli.depends # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o command.cmi command.mli # cached
# Target: gamestate.mli.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:mli, file:gamestate.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules gamestate.mli > gamestate.mli.depends # cached
# Target: player.mli.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o player.cmi player.mli # cached
# Target: gamestate.cmi, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:mli, file:gamestate.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o gamestate.cmi gamestate.mli # cached
# Target: ai.cmi, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o ai.cmi ai.mli # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules gui.mli > gui.mli.depends # cached
# Target: gui.cmi, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o gui.cmi gui.mli # cached
# Target: menu.mli.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:mli, file:menu.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules menu.mli > menu.mli.depends # cached
# Target: menu.cmi, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:mli, file:menu.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o menu.cmi menu.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o main.cmo main.ml # cached
# Target: ai.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules ai.ml > ai.ml.depends # cached
# Target: ai.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o ai.cmo ai.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o command.cmo command.ml # cached
# Target: gamestate.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:gamestate.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules gamestate.ml > gamestate.ml.depends # cached
# Target: gamestate.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:gamestate.cmo, file:gamestate.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o gamestate.cmo gamestate.ml # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules gui.ml > gui.ml.depends # cached
# Target: gui.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o gui.cmo gui.ml # cached
# Target: menu.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:menu.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules menu.ml > menu.ml.depends # cached
# Target: menu.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:menu.cmo, file:menu.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o menu.cmo menu.ml # cached
# Target: player.ml.depends, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -modules player.ml > player.ml.depends # cached
# Target: player.cmo, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package notty -package notty.unix -package str -package ANSITerminal -o player.cmo player.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(notty), package(notty.unix), package(oUnit), package(str), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package oUnit -package notty -package notty.unix -package str -package ANSITerminal command.cmo player.cmo gamestate.cmo ai.cmo gui.cmo menu.cmo main.cmo -o main.byte # cached
# Compilation successful.
